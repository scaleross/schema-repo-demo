name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: get commit hash
        id: commit_hash
        shell: bash
        run: echo "##[set-output name=hash;]$(git rev-parse HEAD)"
      - name: get changed files
        run: |
          git show --name-only --oneline HEAD > git_info
          tail -n +2 git_info > changed_files
          rm git_info
          mkdir upload
          while read p; do
            echo "file: $p"
            if test -f $p; then
              sha1sum $p > $p.sha1
              cp --parents $p upload/
              cp --parents $p.sha1 upload/
              echo $p >> changed_files.meta
            fi
          done < changed_files
      - name: upload to s3
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: bscale-repos-do-not-use
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'upload'
          DEST_DIR: ${{ steps.commit_hash.outputs.hash }}
      - name: create jobs
        run: |
          python script/create_job.py ${{ steps.commit_hash.outputs.hash }}
      - name: remove copied files
        run: |
          rm changed_files.meta
          rm -rf upload
          rm changed_files
      # - name: verify_versions
      #   id: verify
      #   continue-on-error: true
      #   run: |
      #     python script/verify.py
      # - name: Extract branch name
      #   shell: bash
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract_branch
      # - name: push_metadata_file
      #   if: steps.verify.outcome == 'success'
      #   uses: actions-js/push@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     message: commit meta
      #     branch: ${{ steps.extract_branch.outputs.branch }}
      # - name: revert failed migration
      #   if: steps.verify.outcome == 'failure'
      #   id: revert
      #   run: |
      #     git config --global user.name "CHECKER"
      #     git revert HEAD
      # - name: push_revert_file
      #   if: steps.revert.outcome == 'success'
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ${{ steps.extract_branch.outputs.branch }}    
